version: '3.7'

services:

  test_zookeeper:
    image: bitnami/zookeeper:3.6.3
    container_name: test_zookeeper
    user: root
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - BITNAMI_DEBUG=true
    networks:
      - test_dbs_network

  test_kafka:
    image: bitnami/kafka:2.8
    user: root
    container_name: test_kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_INTER_BROKER_USER=''
      - KAFKA_INTER_BROKER_PASSWORD=''
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://test_kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=test_zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - BITNAMI_DEBUG=true
      # - KAFKA_CFG_LOG_CLEANER_ENABLE=false
      # - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - test_zookeeper
    networks:
      - test_dbs_network

#  test_init_kafka:
#    image: bitnami/kafka:2.8
#    container_name: test_init_kafka
#    entrypoint: [ '/bin/sh', '-c' ]
#    command: |
#      "
#      # blocks until kafka is reachable
#      kafka-topics.sh --bootstrap-server test_kafka:9092 --list
#
#      echo -e 'Creating kafka topics'
#      kafka-topics.sh --bootstrap-server test_kafka:9092 --create --if-not-exists --topic testTopic
#
#      echo -e 'Successfully created the following topics:'
#      kafka-topics.sh --bootstrap-server test_kafka:9092 --list
#      "
#    depends_on:
#      - test_kafka
#    networks:
#      - test_dbs_network

  test_ui_kafka:
    image: provectuslabs/kafka-ui
    container_name: test_ui_kafka
    ports:
      - '8082:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=test_kafka:9092
    depends_on:
      - test_kafka
    networks:
      - test_dbs_network


networks:
  test_dbs_network:
    name: test_dbs_network